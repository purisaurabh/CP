// comparator Function Imporatant 


// part first
/*
#include <bits/stdc++.h>
using namespace std;
bool should_I_swap(int a, int b)
{
    // if(a>b) return true; // ascending order
    // return false;
    if(a<b) return true; // descending order
     return false;
}
int main()
{
    int n ;
    cin >> n;
    vector<int>a(n);
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = i+1; j < n; j++)
        {
            if(should_I_swap(a[i],a[j]))
            {
                swap(a[i],a[j]);
            }
        }
        
    }
    for (int i = 0; i < n; i++)
    {
        cout << a[i] <<" ";
    }
}

*/

#include <bits/stdc++.h>
using namespace std;
// bool Should_i_swap(pair<int,int>a,pair<int,int>b)
// {
//     if(a<b) return true; // descending order
//     return false;
// }

bool should_I_swap(pair<int,int>a,pair<int,int>b)
{
    if(a.first != b.first) 
    {
        if(a.first > b.first) return false;   // function ulta kam karta hai 
        return true;
    }

    else
    {
        if(a.second < b.second) retur false;
        return true;
    }
}
int main()
{
    int n ;
    cin >> n;
    vector<pair<int,int>a(n);
    for (int i = 0; i < n; i++)
    {
        cin >> a[i].first >> a[i].second;
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = i+1; j < n; j++)
        {
            if(should_I_swap(a[i],a[j]))
            {
                swap(a[i],a[j]);
            }
        }
        
    }

    // or


    sort(a.begin(),a.end(),should_I_swap)

    //or

     sort(a.begin(),a.end(),greater<pair<int,int>>()) // inbuilt function 
    for (int i = 0; i < n; i++)
    {
        cout << a[i].first <<" " << a[i].second << endl;
    }
    cout << endl;
}



