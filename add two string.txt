Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.

You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.

 

Example 1:

Input: num1 = "11", num2 = "123"
Output: "134"
Example 2:

Input: num1 = "456", num2 = "77"
Output: "533"
Example 3:

Input: num1 = "0", num2 = "0"
Output: "0"
 

Constraints:

1 <= num1.length, num2.length <= 104
num1 and num2 consist of only digits.
num1 and num2 don't have any leading zeros except for the zero itself.



Solutionstring addStrings(string num1, string num2) {
        int i, j, r, carry = 0, sum = 0, first, second;
        string s = "";
        
        i = num1.length() - 1;
        j = num2.length() - 1;
        
        while(i != -1 || j != -1 || carry){
            if(i != -1) first = int(num1[i--] - 48);
            else first = 0;
            
            if(j != -1) second = int(num2[j--] - 48);
            else second = 0;
            
            sum =  first + second + carry ;
            r = sum % 10;
            s.insert(0, to_string(r));
            carry = sum / 10;
        }
        return s;
    }