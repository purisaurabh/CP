Sandeep Bhaiya has a wish which we want to be fulfilled, can you help him? Each data in the Rajendra Nagar has 2 integer variables. In total Rajendra Nagar has n such datas.  Sandeep Bhaiya wants to calculate for each of the data how much data's are there which are strictly smaller then this data.

Definition of a data being smaller than other is as follows , 

data 1 is smaller then data 2 if sum of two integers in data 1 is less than that of data 2.

If sum of both are equal then one with the small value of first integer is smaller.

With this definition you have the smaller one among the two , so obviously the other one is larger.

Note :- The data in rajendra nagar follows the property that no two data are exactly same, that is , no two will have same value of both the integers.

 

Input:-

first line has no.of test cases.

Each test case has , n the no, of datas , then n following lines have 2 integers representing the first and the second integer of the data respectively.

summation of n over all test case <= 500000

0<= Value of integer data <=1e9

 

Output:-

For each test case , output one line having n integers, representing how many datas are smaller then this data.

Ideal solution is attached so you can have answer for any test case you want.

 

Sample Input
1
3
3 4
1 2
5 6
Sample Output
1 0 2 









Solution : 

#include <bits/stdc++.h>
using namespace std;
bool cmp(pair<int , pair<int,int>> p1 , pair<int , pair<int,int>> p2)
{
    int s1 = p1.second.first + p1.second.second;
    int s2 = p2.second.first + p2.second.second;

    if(s1 != s2) return s1 < s2;
    return p1.second.first < p2.second.first;
}

int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n;
        cin >> n;
        vector<pair<int,pair<int,int>>>v(n);

        for (int i = 0; i < n; ++i)
        {
            v[i].first = i;
            cin >> v[i].second.first >> v[i].second.second;
        }

        sort(v.begin() , v.end() , cmp);
        vector<int>ans(n);

        for (int i = 0; i < v.size(); ++i)
        {
            ans[v[i].first] = i;
        }

        for(auto element : ans)
        {
            cout << element << " ";
        }
        cout << "\n";
    }
}